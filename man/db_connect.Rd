% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db.R
\name{db_connect}
\alias{db_connect}
\alias{db_close}
\title{Connect to a Certe Database}
\usage{
db_connect(driver, ..., print = TRUE)

db_close(conn, ..., print = TRUE)
}
\arguments{
\item{driver}{database driver to use, such as \code{\link[odbc:odbc]{odbc::odbc()}} and \code{\link[duckdb:duckdb]{duckdb::duckdb()}}}

\item{...}{arguments passed on to \code{\link[DBI:dbDisconnect]{DBI::dbDisconnect()}}}

\item{print}{a logical to indicate whether info about the connection should be printed}

\item{conn}{connection to close, such as the output of \code{\link[=db_connect]{db_connect()}}}
}
\description{
Connect to an internal (yet remote) Certe database server using \code{\link[DBI:dbConnect]{DBI::dbConnect()}}, or any other database.
}
\examples{
# create a local duckdb database
db <- db_connect(duckdb::duckdb(), "~/my_duck.db")
db

db |> db_write_table("my_iris_table", values = iris)
db |> db_list_tables()
db |> db_has_table("my_iris_table")

if (require(dplyr, warn.conflicts = FALSE)) {
  db |> 
    tbl("my_iris_table") |> 
    filter(Species == "setosa", Sepal.Width > 3) |> 
    collect() |> 
    as_tibble()
}

db |> db_drop_table("my_iris_table")
db |> db_list_tables()

db |> db_close()

# remove the database
unlink("~/my_duck.db")
}
