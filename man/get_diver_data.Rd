% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_diver_data.R
\name{get_diver_data}
\alias{get_diver_data}
\alias{diver_query}
\title{Download Data from Diver Server}
\usage{
get_diver_data(
  date_range = this_year(),
  where = NULL,
  review_qry = interactive(),
  antibiogram_type = "rsi",
  distinct = TRUE,
  auto_transform = TRUE,
  preset = read_secret("db.preset_default"),
  diver_cbase = NULL,
  diver_project = read_secret("db.diver_project"),
  diver_dsn = if (diver_testserver == FALSE) read_secret("db.diver_dsn") else
    read_secret("db.diver_dsn_test"),
  diver_testserver = FALSE
)

diver_query(diver_data)
}
\arguments{
\item{date_range}{date range, can be length 1 or 2 (or more to use the min/max) to filter on the column \code{Ontvangstdatum}. Defaults to \code{\link[=this_year]{this_year()}}. Use \code{NULL} to set no date filter. Can also be years, or functions such as \code{\link[certetoolbox:days_around_today]{last_month()}}.}

\item{where}{arguments to filter data on, will be passed on to \code{\link[dplyr:filter]{filter()}}. \strong{Do not use \code{&&} or \code{||} but only \code{&} or \code{|} in filtering.}}

\item{review_qry}{a \link{logical} to indicate whether the query must be reviewed first, defaults to \code{TRUE} in interactive mode and \code{FALSE} otherwise}

\item{antibiogram_type}{antibiotic transformation mode. Leave blank to strip antibiotic results from the data, \code{"rsi"} to keep RSI values, \code{"mic"} to keep MIC values or \code{"disk"} to keep disk diffusion values. Values will be cleaned with \code{\link[AMR:as.rsi]{as.rsi()}}, \code{\link[AMR:as.mic]{as.mic()}} or \code{\link[AMR:as.disk]{as.disk()}}.}

\item{distinct}{\link{logical} to apply \code{\link[=distinct]{distinct()}} to the resulting data set}

\item{auto_transform}{\link{logical} to apply \code{\link[=auto_transform]{auto_transform()}} to the resulting data set}

\item{preset}{a preset to choose from \code{\link[=presets]{presets()}}. Will be ignored if \code{diver_cbase} is set, even if it is set to \code{NULL}.}

\item{diver_cbase, diver_project, diver_dsn, diver_testserver}{properties to set in \code{\link[=db_connect]{db_connect()}}. The \code{diver_cbase} argument will be based on \code{preset}, but can also be set to blank \code{NULL} to manually select a cBase in a popup window.}

\item{diver_data}{the data downloaded with \code{\link[=get_diver_data]{get_diver_data()}}}
}
\description{
This function can be used to download Spectre data from DiveLine on a Diver server (from \href{https://www.dimins.com}{Dimensional Insight}). This function will set up an ODBC connection (using \code{\link[=db_connect]{db_connect()}}), which requires their quite limited \href{https://www.dimins.com/online-help/workbench_help/Content/ODBC/di-odbc.html}{DI-ODBC driver}.
}
\details{
This function returns a 'Diver tibble', which prints information in the tibble header about the used cBase and current user.

Use \code{\link[=diver_query]{diver_query()}} to retrieve the original query that was used to download the data.
}
\examples{
\dontrun{

# these two work identical:
get_diver_data(date_range = 2022, where = Bepalingcode == "PXNCOV")
get_diver_data(2022, Bepalingcode == "PXNCOV")

# for the `where`, use `&`, `|`, or `c()`:
get_diver_data(last_month(),
               Bepalingcode == "PXNCOV" & Zorglijn == "2e lijn")
get_diver_data(c(2020:2022),
               where = c(Bepalingcode == "PXNCOV", Zorglijn == "2e lijn"))


# USING DIVER INTEGRATOR LANGUAGE --------------------------------------

# Use Diver Integrator functions such as regexp() within EVAL():              
get_diver_data(where = EVAL('regexp(value("Materiaalcode"),"^B")'))

# With ignore case (defaults to false):
get_diver_data(where = EVAL('regexp(value("Materiaalcode"),"^b", true)'))

}
}
